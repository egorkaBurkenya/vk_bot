import vk_api

from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

import json
import datetime

# –ò–º–æ—Ä—Ç–∏—Ä—É—é —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ 
from bs import download_files
from exel import parse_Table
from utiles import today_table, tomorrow_table, this_week_table, next_week_table, week_day_table
from weather import get_today_weather


def get_groupes():
    with open('table.json', 'r') as file:
        table = json.load(file)
    groupes = []
    for groupe in table:
        groupes.append(groupe)
    with open('groupes.json', 'w') as file:
        json.dump({"groupes": groupes}, file)

def main():

    vk_session = vk_api.VkApi(token='587b57fec44ecc5c31175975fa332481eb9a6564b1034e63517565f1844e0253bd65500dc4fcc315d76c3')
    vk = vk_session.get_api()

    longpoll = VkLongPoll(vk_session)
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.text:
            if event.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
                print(event)
                vk.messages.send(
                user_id = event.user_id,
                random_id = get_random_id(),
                message = '–ø—Ä–∏–≤–µ—Ç –¥—Ä—É–≥ !üçÑ')
            elif event.text.lower() == '–±–æ—Ç':
                keyboard = VkKeyboard(one_time=False)
                keyboard.add_button('–Ω–∞ —Å–µ–≥–æ–¥–Ω—è', color=VkKeyboardColor.POSITIVE)
                keyboard.add_button('–Ω–∞ –∑–∞–≤—Ç—Ä–∞', color=VkKeyboardColor.NEGATIVE)
                keyboard.add_line() # –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
                keyboard.add_button('–Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
                keyboard.add_button('–Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
                keyboard.add_line() # –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
                keyboard.add_button('–∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è ?', color=VkKeyboardColor.SECONDARY)
                keyboard.add_button('–∫–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ ?', color=VkKeyboardColor.SECONDARY)
                with open('users.json') as file:
                    groupe = json.load(file)[str(event.user_id)]
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), keyboard=keyboard.get_keyboard(), message = f'–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã {groupe}')
            elif event.text.lower() == 'update':
                try: 
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = '–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤...')
                    download_files()
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = '–§–∞–π–ª—ã —Å–∫–∞—á–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞—é –ø–∞—Ä—Å–∏—Ç—å Exel —Ñ–∞–π–ª—ã...')
                    parse_Table()
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = 'Done üëÄ‚úÖ')
                    get_groupes()
                except: 
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!')
            elif event.text.lower() == '–Ω–∞ —Å–µ–≥–æ–¥–Ω—è':
                with open('users.json', 'r') as f:
                    user_groupe = json.load(f)[str(event.user_id)]
                table = today_table(user_groupe)
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)
            elif event.text.lower() == '–Ω–∞ –∑–∞–≤—Ç—Ä–∞':
                with open('users.json', 'r') as f:
                    user_groupe = json.load(f)[str(event.user_id)]
                table = tomorrow_table(user_groupe)
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)
            elif event.text.lower() == '–Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é':
                with open('users.json', 'r') as f:
                    user_groupe = json.load(f)[str(event.user_id)]
                table = this_week_table(user_groupe)
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)
            elif event.text.lower() == '–Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é':
                with open('users.json', 'r') as f:
                    user_groupe = json.load(f)[str(event.user_id)]
                table = next_week_table(user_groupe)
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)
            elif event.text.lower() == '–∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è ?':
                today = datetime.datetime.today()
                week_number = today.isocalendar()[1] 
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = f'–ò–¥–µ—Ç {week_number} –Ω–µ–¥–µ–ª—è')
            elif event.text.lower() == '–∫–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ ?':
                with open('users.json', 'r') as f:
                    user_groupe = json.load(f)[str(event.user_id)]
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = f'–ü–æ–∫–∞–∑—ã–≤–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã {user_groupe}')
            elif '–±–æ—Ç' in event.text.lower() and len(event.text.lower()) > 4: 

                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–æ–≤–æ –±–æ—Ç –∏ —á—Ç–æ-—Ç–æ –µ—â–µ 

                arg = event.text.lower().split(' ')[1] # –∑–∞–±–∏—Ä–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç 
                with open('groupes.json', 'r') as file:
                    groupes = json.load(file)["groupes"]

                if arg in ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞', '—Å—É–±–±–æ—Ç–∞']:
                    # –µ—Å–ª–∏ –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω –¥–µ–Ω–± –Ω–µ–¥–µ–ª–∏ 
                    with open('users.json', 'r') as f:
                        user_groupe = json.load(f)[str(event.user_id)]
                    table = week_day_table(arg, user_groupe)
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)

                elif arg in groupes:
                    # –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞ –≥—Ä—É–ø–ø–∞ 
                     if event.text in groupes:
                        with open('users.json', 'r') as file:
                            users = json.load(file)
                        users[event.user_id] = event.text
                        with open('users.json', 'w') as file:
                            json.dump(users, file)                    
                        vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = f'–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã {event.text}')
                elif len(event.text.lower().split(' ')) == 3:
                    # –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞ –≥—Ä—É–ø–ø–∞ –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ 
                    with open('users.json', 'r') as f:
                        user_groupe = json.load(f)[str(event.user_id)]
                    args = event.text.split(' ')
                    table = week_day_table(args[1].lower(), args[2])
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = table)
            elif event.text.lower() == '–ø–æ–≥–æ–¥–∞':
                weather = get_today_weather()
                vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = weather)
            else:
                with open('groupes.json', 'r') as file:
                    groupes = json.load(file)["groupes"]
                if event.text in groupes:
                    with open('users.json', 'r') as file:
                        users = json.load(file)
                    users[event.user_id] = event.text
                    with open('users.json', 'w') as file:
                        json.dump(users, file)                    
                    vk.messages.send(user_id = event.user_id, random_id = get_random_id(), message = f'–Ø –∑–∞–ø–æ–º–Ω–∏–ª, —á—Ç–æ —Ç—ã –∏–∑ –≥—Ä—É–ø–ø—ã {event.text}')

if __name__ == '__main__':
    main()